####################
#### 8 Feb 2024 ####
####################

1. Write a PrintPattern program which takes string
   argument and prints the following pattern.

   A                   *
   L *               *
   T   *           *
   A     *       *
   M       *   *
   E         *
   T       *   *
   R     *       *
   I   *           *
   C *               *
   S                   *

2. public static void printPatternX(int size)  // 'X' from 'A' to
   ..., size is a positive interger.

3. 0

   1 0

   0 1 0

   1 0 1 0

   0 1 0 1 0

   1 0 1 0 1 0

   0 1 0 1 0 1 0

   1 0 1 0 1 0 1 0

4. #

   # #

   # # #

   # # # #

   # # # # #

   # # # # # #

   # # # # # # #

   # # # # # # # #

5. # # # # # # #

   #     #     #

   #     #     #

   # # # # # # #

   #     #     #

   #     #     #

   # # # # # # #

6. # # # # # # #

     #

       #

         #

           #

             #

   # # # # # # #

7. # # # # # # #

   # #       # #

   #   #   #   #

   #     #     #

   #   #   #   #

   # #       # #

   # # # # # # #

8. # # # # # # # # # # #

     # # # # # # # # #

       # # # # # # #

         # # # # #

           # # #

             #

9. # # # # # # # # # # #

           # # #

         # # # # #

       # # # # # # #

     # # # # # # # # #

   # # # # # # # # # # #

     # # # # # # # # #

       # # # # # # #

         # # # # #

           # # #

   # # # # # # # # # # #

10. 1

    1 2

    1 2 3

    1 2 3 4

    1 2 3 4 5

    1 2 3 4 5 6

    1 2 3 4 5 6 7

    1 2 3 4 5 6 7 8

11. 8 7 6 5 4 3 2 1

    7 6 5 4 3 2 1

    6 5 4 3 2 1

    5 4 3 2 1
    
    4 3 2 1

    3 2 1
    
    2 1

    1

12. 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1

      1 2 3 4 5 6 7 6 5 4 3 2 1

        1 2 3 4 5 6 5 4 3 2 1

          1 2 3 4 5 4 3 2 1

            1 2 3 4 3 2 1

              1 2 3 2 1

                1 2 1 

                  1

13. 1                           1

    1 2                       2 1

    1 2 3                   3 2 1

    1 2 3 4               4 3 2 1 
 
    1 2 3 4 5           5 4 3 2 1

    1 2 3 4 5 6       6 5 4 3 2 1

    1 2 3 4 5 6 7   7 6 5 4 3 2 1

    1 2 3 4 5 6 7 8 7 6 5 4 3 2 1

14.               1

                2 3 2

              3 4 5 4 3

            4 5 6 7 6 5 4

          5 6 7 8 9 8 7 6 5

        6 7 8 9 0 1 0 9 8 7 6

      7 8 9 0 1 2 3 2 1 0 9 8 7

    8 9 0 1 2 3 4 5 4 3 2 1 0 9 8

15.                             1

                            1   2   1

                        1   2   4   2   1

                    1   2   4   8   4   2   1

                1   2   4   8  16   8   4   2   1

            1   2   4   8  16  32  16   8   4   2   1

        1   2   4   8  16  32  64  32  16   8   4   2   1

    1   2   4   8  16  32  64 128  64  32  16   8   4   2   1

16. 1

    1  1

    1  2  1

    1  3  3  1

    1  4  6  4  1

    1  5 10 10  5  1

    1  6 15 20 15  6  1

17.             1

              1   1

            1   2   1

          1   3   3   1

        1   4   6   4   1

      1   5  10  10   5   1
      
    1   6  15  20  15   6   1